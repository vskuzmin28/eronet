@import '../styles/fonts.css';
.btn {
  display: inline-block;
  padding: 0 56px !important;
  height: 76px;
  border-radius: 6px;
}
.btn-blue {
  background: #0fb9bd;
  font: 30px 'CANDARA';
  color: #f02c60;
  text-transform: uppercase;
  line-height: 76px;
  font-weight: bold;
}
.btn-blue:hover {
  background: #f02c60;
  color: #fff;
}
a,
a:hover,
li,
img,
input,
textarea {
  transition: all 0.5s ease-in-out;
}
body {
  cursor: default;
  overflow-x: hidden !important;
}
a {
  cursor: pointer;
}
p {
  font: 14px 'tahoma';
  color: #f00 !important;
}
@media only screen and (min-width: 1200px) {
  .hr-white {
    margin: 18px auto 0 auto;
    display: block;
    width: 34px;
    height: 3px;
    background: #fff;
  }
  .footer {
    height: 520px;
    background: #f02c60;
    position: relative;
  }
  .footer-couach {
    display: block;
    position: absolute;
    width: 534px;
    height: 560px;
    margin-top: -40px;
    margin-left: -80px;
  }
  .socials {
    margin-top: 90px;
    height: 180px;
    overflow: hidden;
  }
  .socials li {
    margin: 0 !important;
    list-style: none;
    width: 68px;
    height: 88px;
    float: left;
    margin-right: 20px !important;
    margin-bottom: 20px !important;
  }
  .socials li:nth-child(8) {
    margin-right: 0 !important;
  }
  .socials li:nth-child(9) {
    margin: 0 auto !important;
    float: none !important;
  }
  .socials li:nth-child(8) a img,
  .socials li:nth-child(8) a:hover img {
    margin-left: 10px !important;
  }
  .socials li a,
  .socials li a:hover {
    display: block;
    width: 68px;
    text-decoration: none;
  }
  .socials li a p,
  .socials li a:hover p {
    margin-top: 10px;
    text-align: center;
    font: 16px 'MyriadProRegular' !important;
    color: #fff !important;
  }
  .socials li a img,
  .socials li a:hover img {
    display: block !important;
    margin: 0 auto !important;
    width: 60px;
    height: 60px;
  }
  .socials li a:hover img,
  .socials li a:hover:hover img {
    transform: rotate(360deg);
  }
  .socials li a:hover p,
  .socials li a:hover:hover p {
    font-weight: bold !important;
    text-decoration: none !important;
  }
  .footer-info {
    height: auto;
    text-align: center;
    color: #fff;
  }
  .footer-info p {
    font: 30px 'MyriadProRegular' !important;
    color: #fff !important;
  }
  .footer-info p span {
    font-family: 'MyriadProBold' !important;
  }
  .footer-info h4 {
    font: 42px 'CANDARA';
    font-weight: bold;
  }
}
@media only screen and (min-width: 320px) and (max-width: 1200px) {
  .hr-white {
    margin: 18px auto 0 auto;
    display: block;
    width: 34px;
    height: 3px;
    background: #fff;
  }
  .footer {
    height: auto;
    background: #f02c60;
    position: relative;
  }
  .footer-couach {
    display: none;
    position: absolute;
    width: 534px;
    height: 560px;
    margin-top: -40px;
    margin-left: -80px;
  }
  .socials {
    margin-top: 30px;
    height: auto;
    overflow: hidden;
  }
  .socials li {
    margin: 0 !important;
    list-style: none;
    width: 68px;
    height: 88px;
    float: left;
    margin-right: 20px !important;
    margin-bottom: 20px !important;
  }
  .socials li:nth-child(8) {
    margin-right: 0 !important;
  }
  .socials li:nth-child(9) {
    margin: 0 auto !important;
    float: none !important;
  }
  .socials li:nth-child(8) a img,
  .socials li:nth-child(8) a:hover img {
    margin-left: 10px !important;
  }
  .socials li a,
  .socials li a:hover {
    display: block;
    width: 68px;
    text-decoration: none;
  }
  .socials li a p,
  .socials li a:hover p {
    margin-top: 10px;
    text-align: center;
    font: 16px 'MyriadProRegular' !important;
    color: #fff !important;
  }
  .socials li a img,
  .socials li a:hover img {
    display: block !important;
    margin: 0 auto !important;
    width: 60px;
    height: 60px;
  }
  .socials li a:hover img,
  .socials li a:hover:hover img {
    transform: rotate(360deg);
  }
  .socials li a:hover p,
  .socials li a:hover:hover p {
    font-weight: bold !important;
    text-decoration: none !important;
  }
  .footer-info {
    height: auto;
    text-align: center;
    color: #fff;
  }
  .footer-info p {
    font: 30px 'MyriadProRegular' !important;
    color: #fff !important;
  }
  .footer-info p span {
    font-family: 'MyriadProBold' !important;
  }
  .footer-info h4 {
    font: 42px 'CANDARA';
    font-weight: bold;
  }
}
@media only screen and (min-width: 1200px) {
  .header {
    height: 145px;
    background: #191d27;
  }
}
@media only screen and (min-width: 320px) and (max-width: 1200px) {
  .header {
    height: auto;
    overflow: hidden;
    background: #fff;
  }
  .header__logo {
    display: block;
    float: none;
    margin: 20px auto;
  }
  .header__title-site {
    margin: 0;
    margin-bottom: 20px;
    font: 42px 'CANDARA';
    color: #f02c91;
    text-align: center;
    line-height: auto;
    text-transform: uppercase;
  }
  .header__title-site img {
    display: none;
    margin: 99px 36px 0 26px;
    width: 8px;
    height: 8px;
    float: left;
  }
}
/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
